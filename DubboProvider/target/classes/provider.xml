<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans        
                           http://www.springframework.org/schema/beans/spring-beans.xsd        
                           http://code.alibabatech.com/schema/dubbo        
                           http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
                           
	<!-- 提供方应用消息，用于计算依赖 -->
    <dubbo:application name="hello-world-provider"/>
    <dubbo:monitor protocol="registry"></dubbo:monitor>
    <!-- address="N/A" 表示服务不注册到任何节点上-->
    <dubbo:registry address="N/A"/>
    <!-- 配置到注册中心中 eg:zookeeper,如果想配置在集群中  address="192.168.20.102:2181?backup=ip:port"
     	 需要引入zookeeper和zkClient的包-->
    <!-- <dubbo:registry address="192.168.20.102:2181" protocol="zookeeper"/> -->
    <!-- 发布出去的端口 -->
    <dubbo:protocol name="dubbo" port="20881"/>
    <dubbo:protocol name="hessian" port="8099" server="jetty"/> <!-- hessian协议，server表示启动web容器 -->
    
    <!-- 声明需要暴露的服务接口 ,服务发布是以dubbo的协议发布出去-->
    <dubbo:service interface="com.dubbo.demo.api.IHelloWorldService" ref="demoService" protocol="hessian,dubbo"/>
    <dubbo:service interface="com.dubbo.demo.api.IHelloWorldService" ref="demoService2" protocol="dubbo"/>
    <!-- 和本地bean一样实现服务 -->
    <bean id="demoService" class="com.dubbo.demo.provider.HelloWorldServiceImpl"/>
    <bean id="demoService2" class="com.dubbo.demo.provider.HelloWorldServiceImpl2"/>
</beans>